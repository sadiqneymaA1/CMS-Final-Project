{"version":3,"file":"droppable.component.d.ts","sources":["droppable.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef } from '@angular/core';\nimport { EventEmitter, ElementRef } from '@angular/core';\nimport { AbstractComponent } from './abstract.component';\nimport { DragDropConfig } from './dnd.config';\nimport { DragDropService, DragDropData } from './dnd.service';\nexport declare class DroppableComponent extends AbstractComponent {\n    droppable: boolean;\n    /**\n     * Callback function called when the drop action completes correctly.\n     * It is activated before the on-drag-success callback.\n     */\n    onDropSuccess: EventEmitter<DragDropData>;\n    onDragEnter: EventEmitter<DragDropData>;\n    onDragOver: EventEmitter<DragDropData>;\n    onDragLeave: EventEmitter<DragDropData>;\n    allowdrop: (dropData: any) => boolean;\n    dropzones: Array<string>;\n    /**\n     * Drag allowed effect\n     */\n    effectallowed: string;\n    /**\n     * Drag effect cursor\n     */\n    effectcursor: string;\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config: DragDropConfig, cdr: ChangeDetectorRef);\n    _onDragEnterCallback(event: MouseEvent): void;\n    _onDragOverCallback(event: MouseEvent): void;\n    _onDragLeaveCallback(event: MouseEvent): void;\n    _onDropCallback(event: MouseEvent): void;\n}\n"]}