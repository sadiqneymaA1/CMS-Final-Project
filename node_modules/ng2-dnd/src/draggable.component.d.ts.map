{"version":3,"file":"draggable.component.d.ts","sources":["draggable.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef } from '@angular/core';\nimport { EventEmitter, ElementRef } from '@angular/core';\nimport { AbstractComponent, AbstractHandleComponent } from './abstract.component';\nimport { DragDropConfig, DragImage } from './dnd.config';\nimport { DragDropService, DragDropData } from './dnd.service';\nexport declare class DraggableComponent extends AbstractComponent {\n    draggable: boolean;\n    /**\n     * Callback function called when the drag actions happened.\n     */\n    onDragStart: EventEmitter<DragDropData>;\n    onDragEnd: EventEmitter<DragDropData>;\n    /**\n     * The data that has to be dragged. It can be any JS object\n     */\n    dragData: any;\n    /**\n     * Callback function called when the drag action ends with a valid drop action.\n     * It is activated after the on-drop-success callback\n     */\n    onDragSuccessCallback: EventEmitter<any>;\n    dropzones: Array<string>;\n    /**\n     * Drag allowed effect\n     */\n    effectallowed: string;\n    /**\n     * Drag effect cursor\n     */\n    effectcursor: string;\n    /**\n     * Here is the property dragImage you can use:\n     * - The string value as url to the image\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"/images/simpler.png\">\n     * ...\n     * - The DragImage value with Image and offset by x and y:\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\n     * ...\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"myDragImage\">\n     * ...\n     * - The custom function to return the value of dragImage programmatically:\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"getDragImage(someData)\">\n     * ...\n     *   getDragImage(value:any): string {\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\n     *   }\n     */\n    dragImage: string | DragImage | Function;\n    cloneItem: boolean;\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config: DragDropConfig, cdr: ChangeDetectorRef);\n    _onDragStartCallback(event: MouseEvent): void;\n    _onDragEndCallback(event: MouseEvent): void;\n}\nexport declare class DraggableHandleComponent extends AbstractHandleComponent {\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config: DragDropConfig, _Component: DraggableComponent, cdr: ChangeDetectorRef);\n}\n"]}