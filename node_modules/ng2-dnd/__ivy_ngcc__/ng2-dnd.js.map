{"version":3,"file":"ng2-dnd.js","sources":["ts/src/dnd.utils.ts","ts/src/dnd.config.ts","ts/src/dnd.service.ts","ts/src/abstract.component.ts","ts/src/draggable.component.ts","ts/src/droppable.component.ts","ts/src/sortable.component.ts","ts/src/dnd.module.ts","ts/public_api.ts","ts/ng2-dnd.ts"],"names":["__decorate","__metadata"],"mappings":";;;AAAA;AACA;AACA;AACA;AACG;AACoD;;AAEvD,SAAA,QAAA,CAAyB,GAAO,EAAhC;AAAE,IACE,OAAO,OAAO,GAAG,KAAK,QAAQ,CAAC;AACnC,CAAC;AACD;AACG;AACwD;AAE3D,SAAA,SAAA,CAA0B,GAAQ,EAAlC;AAAE,IACE,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;AAC7C,CAAC;AACD;AACG;AACsD;AAEzD,SAAA,UAAA,CAA2B,GAAQ,EAAnC;AAAE,IACE,OAAO,OAAO,GAAG,KAAK,UAAU,CAAC;AACrC,CAAC;AACD;AACG;AAC8C;AAEjD,SAAA,WAAA,CAA4B,GAAW,EAAvC;AAAE,IACE,IAAI,GAAG,GAAoB,IAAI,gBAAgB,EAAE,CAAC;AACtD,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;AAClB,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACD;AACG;AACiB;AAEpB,SAAA,OAAA,CAAwB,GAAa,EAArC;AAAE,IACE,OAAO,GAAG,EAAE,CAAC;AACjB,CAAC;AAAC;ACvCF;AACA;AACA;AAIA,MAAA,kBAAA,CAAA;AAAE,IAOE,WAAJ,CAAuB,IAAY,EAAnC;AAAE,QAAqB,IAAvB,CAAA,IAA2B,GAAJ,IAAI,CAAQ;AAAC,KAAI;AACxC;AANW,kBAAX,CAAA,IAAe,GAAG,IAAI,kBAAkB,CAAC,MAAM,CAAC,CAAC;AACtC,kBAAX,CAAA,IAAe,GAAG,IAAI,kBAAkB,CAAC,MAAM,CAAC,CAAC;AACtC,kBAAX,CAAA,IAAe,GAAG,IAAI,kBAAkB,CAAC,MAAM,CAAC,CAAC;AACtC,kBAAX,CAAA,IAAe,GAAG,IAAI,kBAAkB,CAAC,MAAM,CAAC,CAAC;AAKjD,MAAA,SAAA,CAAA;AAAE,IACE,WAAJ,CACe,YAAiB,EACjB,QAFf,GAEkC,CAAC,EACpB,QAHf,GAGkC,CAAC,EAHnC;AAAE,QACa,IAAf,CAAA,YAA2B,GAAZ,YAAY,CAAK;AAAC,QAClB,IAAf,CAAA,QAAuB,GAAR,QAAQ,CAAY;AAAC,QACrB,IAAf,CAAA,QAAuB,GAAR,QAAQ,CAAY;AAAC,QACxB,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;AAC7C;AAAoD,YACpC,IAAI,MAAM,GAAmB,IAAI,CAAC,YAAY,CAAC;AAC/D,YAAgB,IAAI,CAAC,YAAY,GAAG,IAAI,gBAAgB,EAAE,CAAC;AAC3D,YAAmC,IAAI,CAAC,YAAa,CAAC,GAAG,GAAG,MAAM,CAAC;AACnE,SAAa;AACb,KAAS;AACT,CAAC;AAED,MAAA,cAAA,CAAA;AAAE,IAAF,WAAA,GAAA;AAAE,QACS,IAAX,CAAA,gBAA2B,GAAW,gBAAgB,CAAC;AACvD,QAAW,IAAX,CAAA,gBAA2B,GAAW,gBAAgB,CAAC;AACvD,QAAW,IAAX,CAAA,eAA0B,GAAW,eAAe,CAAC;AACrD,QAAW,IAAX,CAAA,mBAA8B,GAAW,mBAAmB,CAAC;AAC7D,QACW,IAAX,CAAA,UAAqB,GAAuB,kBAAkB,CAAC,IAAI,CAAC;AACpE,QAAW,IAAX,CAAA,UAAqB,GAAuB,kBAAkB,CAAC,IAAI,CAAC;AACpE,QAAW,IAAX,CAAA,UAAqB,GAAW,MAAM,CAAC;AACvC,QACW,IAAX,CAAA,aAAwB,GAAW,SAAS,CAAC;AAC7C,KAAC;AAAC,CAAD;AAAC;ACzCF;AACA;AACA;AACA;AAGiC;AAIX;AAMP;AAM2B;AAKlC;AAAG;AAAgE;AAKtD;AAtBrB,MAAA,YAAA,CAAA;AAAE,CAGD;AAED,SAAA,sBAAA,GAAA;AAAE,IACE,OAAO,IAAI,eAAe,EAAE,CAAC;AACjC,CAAC;AAGD,IAAa,eAAe,GAA5B,MAAA,eAAA,CAAA;AAAE,IADF,WAAA,GAAA;AAAE,QAEE,IAAJ,CAAA,gBAAoB,GAAkB,EAAE,CAAC;AACzC,KAGC;AACD,CADC,CAAA;AALY,eAAe,GAA5BA,YAAA,CAAA,MADC,UAAU,EAAE,EACb,EAAa,eAAe,CAK3B;uJALD;AAOA,SAAA,8BAAA,CAA+C,MAAsB,EAArE;AAAE,IACE,OAAO,IAAI,uBAAuB,CAAC,MAAM,CAAC,CAAC;AAC/C,CAAC;AAGD,IAAa,uBAAuB,GAApC,MAAA,uBAAA,CAAA;AAAE,IAUE,WAAJ,CAAwB,OAAsB,EAA9C;AAAE,QAAsB,IAAxB,CAAA,OAA+B,GAAP,OAAO,CAAe;AAAC,KAAG;AAClD,IALI,IAAW,IAAI,GAAnB;AAAE,QACM,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,KAAK;AACL,IAGI,YAAY,CAAC,IAAiB,EAAlC;AAAE,QACM,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AACnC,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC1E,SAAS;AACT,QAAQ,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;AAC7B,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC9B,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACvE,SAAS;AACT,KAAK;AACL,CAAC;;+KAAA;AArBY,uBAAuB,GAApCA,YAAA,CAAA,MADC,UAAU,EAAE,jBACT,CAUJ,UAAA,CAAA,mBAAA,EAAA,CAAgC,cAAc,CAA9C,CAAA;AAAC,CAVD,EAAa,uBAAuB,CAqBnC,CArBD;AAAC;AChCD;AACA;AACA;AACA;AAEoB;AAIpB;AAGgC;AAOZ;AAKlB;AAAG;AAEC;AAE2B;AAhBjC,IAAsB,iBAAiB,GAAvC,MAAA,iBAAA,CAAA;AAAE,IAiFE,WAAJ,CAAgB,OAAmB,EAAS,gBAAiC,EAAS,OAAuB,EAC7F,IAAuB,EADvC;AAAE,QAA0C,IAA5C,CAAA,gBAA4D,GAAhB,gBAAgB,CAAiB;AAAC,QAAQ,IAAtF,CAAA,OAA6F,GAAP,OAAO,CAAgB;AAAC,QAC9F,IAAhB,CAAA,IAAoB,GAAJ,IAAI,CAAmB;AAAC;AAEhC;AACU;AAAY,QAvElB,IAAZ,CAAA,YAAwB,GAAY,KAAK,CAAC;AAC1C;AAAY;AACD;AAAY,QAUnB,IAAJ,CAAA,WAAe,GAAY,KAAK,CAAC;AACjC,QAyBI,IAAJ,CAAA,SAAa,GAAa,EAAE,CAAC;AAC7B,QA0BI,IAAJ,CAAA,SAAa,GAAY,KAAK,CAAC;AAC/B;AACkD,QAI1C,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,aAAa,CAAC;AACpD,QAAQ,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,aAAa,CAAC;AAC3C,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;AAAsC;AAClF;AACY;AACZ,QACF,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,KAAY,KAA9C;AAAE,YACU,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACrC,SAAS,CAAC;AACV,QAAQ,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,KAAgB,KAAjD;AAAE,YACU,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACpC;AACA,YAAY,IAAI,KAAK,CAAC,YAAY,IAAI,IAAI,EAAE;AAC5C,gBAAgB,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;AAC7E,aAAa;AACb,YACY,OAAO,KAAK,CAAC;AACzB,SAAS,CAAC;AACV,QAAQ,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,KAAY,KAA9C;AAAE,YACU,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACrC,SAAS,CAAC;AACV,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,KAAY,KAAzC;AAAE,YACU,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChC,SAAS,CAAC;AACV;AACA;AACA;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,KAAiB,KAAnD;AAAE,YACU,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;AACxC,SAAS,CAAC;AACV,QAAQ,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,KAAgB,KAAlD;AAAE,YACU,IAAI,IAAI,CAAC,WAAW,EAAE;AAClC,gBAAgB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAU,IAAI,CAAC,OAAO,CAAC,EAAE;AACvE,oBAAoB,KAAK,CAAC,cAAc,EAAE,CAAC;AAC3C,oBAAoB,OAAO;AAC3B,iBAAiB;AACjB,aAAa;AACb,YACY,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACrC;AACA,YAAY,IAAI,KAAK,CAAC,YAAY,IAAI,IAAI,EAAE;AAC5C,gBAAgB,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AACvD;AACA,gBAAgB,KAAK,CAAC,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;AACtG;AACA,gBAAgB,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AAC/C,oBAAoB,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AAClD,wBAA8B,KAAK,CAAC,YAAa,CAAC,YAAY,CAAC,WAAW,CAAS,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;AACpG,qBAAqB;AAAC,yBAAK,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AAC3D,wBAA8B,KAAK,CAAC,YAAa,CAAC,YAAY,CAAC,OAAO,CAAW,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;AAClG,qBAAqB;AAAC,yBAAK;AAC3B,wBAAwB,IAAI,GAAG,GAAyB,IAAI,CAAC,SAAS,CAAC;AACvE,wBAA8B,KAAK,CAAC,YAAa,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC7G,qBAAqB;AACrB,iBAAiB;AAAC,qBAAK,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;AAC9D,oBAAoB,IAAI,SAAS,GAAc,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;AACtE,oBAA0B,KAAK,CAAC,YAAa,CAAC,YAAY,CAAC,SAAS,CAAC,YAAY,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC;AAC3H,iBAAiB;AAAC,qBAAK,IAAI,IAAI,CAAC,SAAS,EAAE;AAC3C,oBAAoB,IAAI,CAAC,WAAW,GAAgB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC/E,oBAAoB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AACpE,oBAAoB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;AACjE,oBAAoB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;AACvD,oBAAoB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC;AAC5D,oBAAoB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC3E,oBAA0B,KAAK,CAAC,YAAa,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3G,iBAAiB;AACjB;AACqC,gBACrB,IAAI,UAAU,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;AACpF,gBACgB,IAAI,IAAI,CAAC,YAAY,EAAE;AACvC,oBAAoB,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;AAC9G,iBAAiB;AAAC,qBAAK;AACvB,oBAAoB,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;AAClE,iBAAiB;AACjB,aAAa;AACb,SAAS,CAAC;AACV,QACQ,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,KAAY,KAA5C;AAAE,YACU,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,EAAE;AAC9D,gBAAgB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACvE,aAAa;AACb;AACA,YAAY,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AACnC;AACA,YAAY,IAAI,UAAU,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;AAChF,YAAY,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;AAC1D,SAAS,CAAC;AACV,KAAK;AACL,IA/JI,IAAI,WAAW,CAAC,OAAgB,EAApC;AAAE,QACM,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC;AACtC,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;AACjD,KAAK;AACL,IAAI,IAAI,WAAW,GAAnB;AAAE,QACM,OAAO,IAAI,CAAC,YAAY,CAAC;AACjC,KAAK;AACL,IAyJW,aAAa,CAAC,IAAiB,EAA1C;AAAE,QACM,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAChC,KAAK;AACL;AACA,IACI,aAAa,GAAjB;AAAE;AACiD,QAC3C,UAAU,CAAC,MAAnB;AAAE,YACU,IAAK,IAAI,CAAC,IAAI,IAAI,CAAE,IAAI,CAAC,IAAgB,CAAC,SAAU,EAAE;AAClE,gBAAgB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;AAC1C,aAAa;AACb,SAAS,EAAE,GAAG,CAAC,CAAC;AAChB,KAAK;AACL;AACgC,IACpB,YAAY,CAAC,KAAY,EAArC;AAAE;AAC4B,QACtB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;AACxC;AACA,YAAY,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;AAC7C,SAAS;AACT,KAAK;AACL,IACY,WAAW,CAAC,KAAY,EAApC;AAAE;AACqC,QAC/B,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;AACxC;AACA,YAAY,IAAI,KAAK,CAAC,cAAc,EAAE;AACtC;AACA,gBAAgB,KAAK,CAAC,cAAc,EAAE,CAAC;AACvC,aAAa;AACb,YACY,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AAC5C,SAAS;AACT,KAAK;AACL,IACY,YAAY,CAAC,KAAY,EAArC;AAAE;AAC4B,QACtB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;AACxC;AACA,YAAY,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;AAC7C,SAAS;AACT,KAAK;AACL,IACY,OAAO,CAAC,KAAY,EAAhC;AAAE;AAC4B,QACtB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;AACxC;AACA,YAAY,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AACxC,YACY,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AACxC,YACY,IAAI,CAAC,aAAa,EAAE,CAAC;AACjC,SAAS;AACT,KAAK;AACL,IACY,cAAc,CAAC,KAAU,EAArC;AAAE,QACM,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,KAAK,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,WAAW,EAAE;AACvH;AACA;AACA,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE;AAChC,gBAAgB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACtE,aAAa;AACb;AACwD,YAC5C,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;AACpG,gBAAgB,OAAO,IAAI,CAAC;AAC5B,aAAa;AACb,YAAY,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5F,gBAAgB,IAAI,QAAQ,GAAW,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AACjF,gBAAgB,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;AAC7D,oBAAoB,OAAO,IAAI,CAAC;AAChC,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IACY,eAAe,CAAC,KAAY,EAAxC;AAAE,QACM,IAAI,KAAK,CAAC,cAAc,EAAE;AAClC,YAAY,KAAK,CAAC,cAAc,EAAE,CAAC;AACnC,SAAS;AACT,QAAQ,IAAI,KAAK,CAAC,eAAe,EAAE;AACnC,YAAY,KAAK,CAAC,eAAe,EAAE,CAAC;AACpC,SAAS;AACT,KAAK;AACL;AACwC,IAE5B,YAAY,CAAC,KAAY,EAArC;AAAE;AACsB,QAChB,IAAI,IAAI,CAAC,YAAY,EAAE;AAC/B,YAAY,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC;AACpE;AACA,YAAY,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;AAC7C,SAAS;AACT,KAAK;AACL,IACY,UAAU,CAAC,KAAY,EAAnC;AAAE,QACM,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,EAAE,CAAC;AACpD;AACA,QAAQ,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;AACvC,KAAK;AACL;AACgC,IAC5B,oBAAoB,CAAC,KAAY,EAArC,GAA0C;AAC1C,IAAI,mBAAmB,CAAC,KAAY,EAApC,GAAyC;AACzC,IAAI,oBAAoB,CAAC,KAAY,EAArC,GAA0C;AAC1C,IAAI,eAAe,CAAC,KAAY,EAAhC,GAAqC;AACrC;AACgC,IAC5B,oBAAoB,CAAC,KAAY,EAArC,GAA0C;AAC1C,IAAI,kBAAkB,CAAC,KAAY,EAAnC,GAAwC;AACxC,CAAC;;6JAAA;AAhSqB,iBAAiB,GAAvCA,YAAA,CAAA,MADC,UAAU,EAAE,jBACT,CAiFJC,YAAA,CAAA,mBAAA,EAAA,CAAyB,UAAU,EAA2B,eAAe,EAAkB,cAAc;AAC7G,QAAsB,iBAAiB,CAAvC,CAAA;AAAC,CAlFD,EAAsB,iBAAiB,CAgStC,CAhSD;AAkSA,MAAA,uBAAA,CAAA;AAAE,IAEE,WAAJ,CAAgB,OAAmB,EAAS,gBAAiC,EAAS,OAAuB,EAC7F,UAA6B,EAAU,IAAuB,EAD9E;AAAE,QAA0C,IAA5C,CAAA,gBAA4D,GAAhB,gBAAgB,CAAiB;AAAC,QAAQ,IAAtF,CAAA,OAA6F,GAAP,OAAO,CAAgB;AAAC,QAC9F,IAAhB,CAAA,UAA0B,GAAV,UAAU,CAAmB;AAAC,QAAS,IAAvD,CAAA,IAA2D,GAAJ,IAAI,CAAmB;AAAC,QACvE,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,aAAa,CAAC;AAC3C,QAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClD,KAAK;AACL,CAAC;AACD;ACtTA;AACA;AACA;AACA;AAEyC;AAGlC;AAGc;AAIX;AAIgB;AAAG;AAEN;AACoB;AAV3C,IAAa,kBAAkB,GAA/B,MAAA,kBAAgC,SAAQ,iBAAiB,CAAzD;AAAE,IAqEE,WAAJ,CAAgB,OAAmB,EAAE,eAAgC,EAAE,MAAqB,EACpF,GAAqB,EAD7B;AAAE,QAGM,KAAK,CAAC,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;AACrD;AAAY;AACa;AACrB,QAlEU,IAAd,CAAA,WAAyB,GAA+B,IAAI,YAAY,EAAgB,CAAC;AACzF,QAAc,IAAd,CAAA,SAAuB,GAA+B,IAAI,YAAY,EAAgB,CAAC;AACvF;AAEG;AAEgB;AAGyB;AAAY,QAG3B,IAA7B,CAAA,qBAAkD,GAAsB,IAAI,YAAY,EAAO,CAAC;AAChG,QAmDQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;AACtD,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAChC,KAAK;AACL,IA1E0B,IAAI,SAAS,CAAC,KAAa,EAArD;AAAE,QACM,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC;AACnC,KAAK;AACL,IAkBwB,IAAI,SAAS,CAAC,KAAmB,EAAzD;AAAE,QACM,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,KAAK;AACL;AACO;AACmB;AACnB,IACqB,IAAI,aAAa,CAAC,KAAa,EAA3D;AAAE,QACM,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AACnC,KAAK;AACL;AACO;AACkB;AAClB,IACoB,IAAI,YAAY,CAAC,KAAa,EAAzD;AAAE,QACM,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAClC,KAAK;AACL,IAqCI,oBAAoB,CAAC,KAAiB,EAA1C;AAAE,QACM,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC;AAC/C,QAAQ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AACvD,QAAQ,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;AACjF,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAChE;AACA,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;AAC5E,KAAK;AACL,IACI,kBAAkB,CAAC,KAAiB,EAAxC;AAAE,QACM,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,KAAK,CAAC;AAChD,QAAQ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9C,QAAQ,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,GAAG,IAAI,CAAC;AAC3D,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACnE;AACA,QAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;AAC1E,KAAK;AACL,CAAC;;oiBAAA;AA5FyBD,YAA1B,CAAA;AAAE,IAAG,KAAK,CAAC,aAAa,CAAC;AAAE;AACf;AAIF,CAHV,EAAA,kBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,IAAA,CAAK,CAAL;AAKcA,YAAd,CAAA;AAAE,IAAG,MAAM,EAAE;AAAE,IAAfC,YAAA,CAAA,aAAA,EAA2B,YAAY,CAAvC;AAAC,CAAD,EAAA,kBAAA,CAAA,SAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAyF,CAAzF;AACcD,YAAd,CAAA;AAAE,IAAG,MAAM,EAAE;AAAE,IAAfC,YAAA,CAAA,aAAA,EAAyB,YAAY,CAArC;AAAC,CAAD,EAAA,kBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAuF,CAAvF;AAKaD,YAAb,CAAA;AAAE,IAAG,KAAK,EAAE;AAAE;AAGG,CAHjB,EAAA,kBAAA,CAAA,SAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAA2B,CAA3B;AAM6BA,YAA7B,CAAA;AAAE,IAAG,MAAM,CAAC,eAAe,CAAC;AAAE,IAA9BC,YAAA,CAAA,aAAA,EAAoD,YAAY,CAAhE;AAAC,CAAD,EAAA,kBAAA,CAAA,SAAA,EAAA,uBAAA,EAAA,KAAA,CAAA,CAAgG,CAAhG;AAEwBD,YAAxB,CAAA;AAAE,IAAG,KAAK,CAAC,WAAW,CAAC;AAAE,IAAzBC,YAAA,CAAA,aAAA,EAA4C,KAAK,CAAjD;AAAE,IAAFA,YAAA,CAAA,mBAAA,EAAA,CAA4C,KAAK,CAAjD,CAAA;AAAC,CAED,EAAA,kBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,IAAA,CAAK,CAAL;AAK4BD,YAA5B,CAAA;AAAE,IAAG,KAAK,CAAC,eAAe,CAAC;AAAE;AACtB;AAIH,CAHJ,EAAA,kBAAA,CAAA,SAAA,EAAA,eAAA,EAAA,IAAA,CAAK,CAAL;AAK2BA,YAA3B,CAAA;AAAE,IAAG,KAAK,CAAC,cAAc,CAAC;AAAE;AACpB;AAIF,CAHN,EAAA,kBAAA,CAAA,SAAA,EAAA,cAAA,EAAA,IAAA,CAAK,CAAL;AAyBaA,YAAb,CAAA;AAAE,IAAG,KAAK,EAAE;AAAE;AAAwC,CAAtD,EAAA,kBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAsD,CAAtD;AAGaA,YAAb,CAAA;AAAE,IAAG,KAAK,EAAE;AAAE;AAEO,CAFrB,EAAA,kBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAgC,CAAhC;AAnEa,kBAAkB,GAA/BA,YAAA,CAAA,MADC,SAAS,CAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAAC,/CACvC,CAqEJC,YAAA,CAAA,mBAAA,EAAA,CAAyB,UAAU,EAAmB,eAAe,EAAS,cAAc;AAC5F,QAAY,iBAAiB,CAA7B,CAAA;AAAC,CAtED,EAAa,kBAAkB,CA8F9B,CA9FD;AAkGA,IAAa,wBAAwB,GAArC,MAAA,wBAAsC,SAAQ,uBAAuB,CAArE;AAAE,IACE,WAAJ,CAAgB,OAAmB,EAAE,eAAgC,EAAE,MAAqB,EAAE,UAA8B,EACpH,GAAqB,EAD7B;AAAE,QAGM,KAAK,CAAC,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;AACjE,KAAK;AACL,CAAC;;yMAAA;AANY,wBAAwB,GAArCD,YAAA,CAAA,MADC,SAAS,CAAC,EAAE,QAAQ,EAAE,wBAAwB,EAAE,CAAC,tDAC9C,CACJC,YAAA,CAAA,mBAAA,EAAA,CAAyB,UAAU,EAAmB,eAAe,EAAS,cAAc,EAAc,kBAAkB;AAC5H,QAAY,iBAAiB,CAA7B,CAAA;AAAC,CAFD,EAAa,wBAAwB,CAMpC,CAND;AAAC;AC9GD;AACA;AACA;AACA;AAEyC;AAGT;AAInB;AAMV;AAC2D;AAAG;AACR;AAGlD;AAXP,IAAa,kBAAkB,GAA/B,MAAA,kBAAgC,SAAQ,iBAAiB,CAAzD;AAAE,IAqCE,WAAJ,CAAgB,OAAmB,EAAE,eAAgC,EAAE,MAAqB,EACpF,GAAqB,EAD7B;AAAE,QAGM,KAAK,CAAC,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;AACrD;AACW;AAIR;AACiB;AAAY,QArClB,IAAd,CAAA,aAA2B,GAA+B,IAAI,YAAY,EAAgB,CAAC;AAC3F,QAAc,IAAd,CAAA,WAAyB,GAA+B,IAAI,YAAY,EAAgB,CAAC;AACzF,QAAc,IAAd,CAAA,UAAwB,GAA+B,IAAI,YAAY,EAAgB,CAAC;AACxF,QAAc,IAAd,CAAA,WAAyB,GAA+B,IAAI,YAAY,EAAgB,CAAC;AACzF,QA4BQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAChC,KAAK;AACL,IA1C0B,IAAI,SAAS,CAAC,KAAa,EAArD;AAAE,QACM,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC;AACnC,KAAK;AACL,IAUwB,IAAI,SAAS,CAAC,KAAiC,EAAvE;AAAE,QACM,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,KAAK;AACL,IACwB,IAAI,SAAS,CAAC,KAAmB,EAAzD;AAAE,QACM,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,KAAK;AACL;AACO;AACmB;AACnB,IACqB,IAAI,aAAa,CAAC,KAAa,EAA3D;AAAE,QACM,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AACnC,KAAK;AACL;AACO;AACkB;AAClB,IACoB,IAAI,YAAY,CAAC,KAAa,EAAzD;AAAE,QACM,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAClC,KAAK;AACL,IASI,oBAAoB,CAAC,KAAiB,EAA1C;AAAE,QACM,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;AAC7C,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACpE,YAAY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;AACjG,SAAS;AACT,KAAK;AACL,IACI,mBAAmB,CAAE,KAAiB,EAA1C;AAAE,QACM,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;AAC7C,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;AACnE,YAAY,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;AAChG,SAAS;AACT,KAAK;AAAC;AAEF,IAAA,oBAAoB,CAAE,KAAiB,EAA3C;AAAE,QACM,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;AAC7C,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;AACtE,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACvE,YAAY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;AACjG,SAAS;AACT,KAAK;AAAC;AAEF,IAAA,eAAe,CAAE,KAAiB,EAAtC;AAAE,QACM,IAAI,YAAY,GAAI,KAAa,CAAC,YAAY,CAAC;AACvD,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,KAAK,YAAY,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE;AACrF,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;AACnG,YAAY,IAAI,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE;AAC7D,gBAAgB,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;AAChI,aAAa;AACb,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;AACtE,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACvE,SAAS;AACT,KAAK;AACL,CAAC;;2hBAAA;AA5EyBD,YAA1B,CAAA;AAAE,IAAG,KAAK,CAAC,aAAa,CAAC;AAAE;AACf;AAIF,CAHV,EAAA,kBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,IAAA,CAAK,CAAL;AAMcA,YAAd,CAAA;AAAE,IAAG,MAAM,EAAE;AAAE,IAAfC,YAAA,CAAA,aAAA,EAA6B,YAAY,CAAzC;AAAC,CAAD,EAAA,kBAAA,CAAA,SAAA,EAAA,eAAA,EAAA,KAAA,CAAA,CAA2F,CAA3F;AACcD,YAAd,CAAA;AAAE,IAAG,MAAM,EAAE;AAAE,IAAfC,YAAA,CAAA,aAAA,EAA2B,YAAY,CAAvC;AAAC,CAAD,EAAA,kBAAA,CAAA,SAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAyF,CAAzF;AACcD,YAAd,CAAA;AAAE,IAAG,MAAM,EAAE;AAAE,IAAfC,YAAA,CAAA,aAAA,EAA0B,YAAY,CAAtC;AAAC,CAAD,EAAA,kBAAA,CAAA,SAAA,EAAA,YAAA,EAAA,KAAA,CAAA,CAAwF,CAAxF;AACcD,YAAd,CAAA;AAAE,IAAG,MAAM,EAAE;AAAE,IAAfC,YAAA,CAAA,aAAA,EAA2B,YAAY,CAAvC;AAAC,CAAD,EAAA,kBAAA,CAAA,SAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAyF,CAAzF;AAEwBD,YAAxB,CAAA;AAAE,IAAG,KAAK,CAAC,WAAW,CAAC;AAAE;AAA2C;AAIhE,CAFJ,EAAA,kBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,IAAA,CAAK,CAAL;AAEwBA,YAAxB,CAAA;AAAE,IAAG,KAAK,CAAC,WAAW,CAAC;AAAE,IAAzBC,YAAA,CAAA,aAAA,EAA4C,KAAK,CAAjD;AAAE,IAAFA,YAAA,CAAA,mBAAA,EAAA,CAA4C,KAAK,CAAjD,CAAA;AAAC,CAED,EAAA,kBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,IAAA,CAAK,CAAL;AAK4BD,YAA5B,CAAA;AAAE,IAAG,KAAK,CAAC,eAAe,CAAC;AAAE;AACtB;AAIH,CAHJ,EAAA,kBAAA,CAAA,SAAA,EAAA,eAAA,EAAA,IAAA,CAAK,CAAL;AAK2BA,YAA3B,CAAA;AAAE,IAAG,KAAK,CAAC,cAAc,CAAC;AAAE;AACpB;AAGM,CAFd,EAAA,kBAAA,CAAA,SAAA,EAAA,cAAA,EAAA,IAAA,CAAK,CAAL;AAnCa,kBAAkB,GAA/BA,YAAA,CAAA,MADC,SAAS,CAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAAC,/CACvC,CAqCJC,YAAA,CAAA,mBAAA,EAAA,CAAyB,UAAU,EAAmB,eAAe,EAAS,cAAc;AAC5F,QAAY,iBAAiB,CAA7B,CAAA;AAAC,CAtCD,EAAa,kBAAkB,CA8E9B,CA9ED;AAAC;ACZD;AACA;AACA;AACA;AAEyC;AAGK;AAEM;AAKnC;AACU;AAAG;AAGuB;AAGrB;AAThC,IAAa,iBAAiB,GAA9B,MAAA,iBAA+B,SAAQ,iBAAiB,CAAxD;AAAE,IA4BE,WAAJ,CAAgB,OAAmB,EAAE,eAAgC,EAAE,MAAqB,EAAE,GAAqB,EACnG,oBAA6C,EAD7D;AAAE,QAGM,KAAK,CAAC,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;AACrD,QAHgB,IAAhB,CAAA,oBAAoC,GAApB,oBAAoB,CAAyB;AAAC,QAvBlD,IAAZ,CAAA,aAAyB,GAAyB,EAAE,CAAC;AACrD,QAyBQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACjC,KAAK;AACL,IAhC0B,IAAI,SAAS,CAAC,KAAa,EAArD;AAAE,QACM,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC;AACnC,KAAK;AACL,IAIa,IAAI,YAAY,CAAC,YAAkC,EAAhE;AAAE,QACM,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;AAC1C,QAAQ,IAAI,YAAY,YAAY,SAAS,EAAE;AAC/C,YAAY,IAAI,CAAC,eAAe,GAAG,IAAI,wBAAwB,EAAE,CAAC;AAClE,SAAS;AAAC,aAAK;AACf,YAAY,IAAI,CAAC,eAAe,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAC9D,SAAS;AACT;AACA,QAAQ,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;AAChD;AACA,KAAK;AACL,IAAI,IAAI,YAAY,GAApB;AAAE,QACM,OAAO,IAAI,CAAC,aAAa,CAAC;AAClC,KAAK;AACL,IACwB,IAAI,SAAS,CAAC,KAAmB,EAAzD;AAAE,QACM,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,KAAK;AACL,IAQI,oBAAoB,CAAC,KAAY,EAArC;AAAE,QACM,IAAI,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE;AACjD,YAAY,IAAI,IAAI,GAAO,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;AAClH;AACA,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AAC3C;AACA;AACA;AACA,gBAAgB,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;AAC1G,gBAAgB,IAAI,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5F,oBAAoB,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,WAAW,GAAG,IAAI,CAAC;AACnF,iBAAiB;AACjB;AACA,gBAAgB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAC3C,gBAAgB,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,GAAG,IAAI,CAAC;AACnE,gBAAgB,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,CAAC,CAAC;AACpD,aAAa;AACb;AACA,YAAY,IAAI,CAAC,aAAa,EAAE,CAAC;AACjC,SAAS;AACT,KAAK;AACL,IACI,SAAS,CAAC,KAAa,EAA3B;AAAE,QACM,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AACzE,KAAK;AACL,IACI,OAAO,CAAC,IAAS,EAArB;AAAE,QACM,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;AACtE,KAAK;AACL,IACI,YAAY,CAAC,KAAa,EAA9B;AAAE,QACM,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AACrE,KAAK;AACL,IACI,YAAY,CAAC,IAAS,EAAE,KAAa,EAAzC;AAAE,QACM,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAC3E,KAAK;AACL,CAAC;;uTAAA;AAtEyBD,YAA1B,CAAA;AAAE,IAAG,KAAK,CAAC,aAAa,CAAC;AAAE;AACf;AAGM,CAFlB,EAAA,iBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,IAAA,CAAK,CAAL;AAKaA,YAAb,CAAA;AAAE,IAAG,KAAK,EAAE;AAAE;AAAyC;AACpB,CASnC,EAAA,iBAAA,CAAA,SAAA,EAAA,cAAA,EAAA,IAAA,CAAK,CAAL;AAKwBA,YAAxB,CAAA;AAAE,IAAG,KAAK,CAAC,WAAW,CAAC;AAAE,IAAzBC,YAAA,CAAA,aAAA,EAA4C,KAAK,CAAjD;AAAE,IAAFA,YAAA,CAAA,mBAAA,EAAA,CAA4C,KAAK,CAAjD,CAAA;AAAC,CAED,EAAA,iBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,IAAA,CAAK,CAAL;AA1Ba,iBAAiB,GAA9BD,YAAA,CAAA,MADC,SAAS,CAAC,EAAE,QAAQ,EAAE,0BAA0B,EAAE,CAAC,xDAChD,CA4BJC,YAAA,CAAA,mBAAA,EAAA,CAAyB,UAAU,EAAmB,eAAe,EAAS,cAAc,EAAM,iBAAiB;AACnH,QAAsC,uBAAuB,CAA7D,CAAA;AAAC,CA7BD,EAAa,iBAAiB,CAwE7B,CAxED;AA0EA,MAAA,oBAAA,CAAA;AAAE,IACE,SAAS,CAAC,YAAiB,EAAE,KAAa,EAA9C;AAAE,QACM,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC;AACnC,KAAK;AACL,IACI,OAAO,CAAC,YAAiB,EAAE,IAAS,EAAxC;AAAE,QACM,OAAO,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC1C,KAAK;AACL,IACI,YAAY,CAAC,YAAiB,EAAE,KAAa,EAAjD;AAAE,QACM,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACtC,KAAK;AACL,IACI,YAAY,CAAC,YAAiB,EAAE,IAAS,EAAE,KAAa,EAA5D;AAAE,QACM,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAC5C,KAAK;AACL,CAAC;AAED,MAAA,wBAAA,CAAA;AAAE,IACE,SAAS,CAAC,YAAiB,EAAE,KAAa,EAA9C;AAAE,QACM,OAAO,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AACtC,KAAK;AACL,IACI,OAAO,CAAC,YAAiB,EAAE,IAAS,EAAxC;AAAE,QACM,OAAO,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnD,KAAK;AACL,IACI,YAAY,CAAC,YAAiB,EAAE,KAAa,EAAjD;AAAE,QACM,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACrC,KAAK;AACL,IACI,YAAY,CAAC,YAAiB,EAAE,IAAS,EAAE,KAAa,EAA5D;AAAE,QACM,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACzC,KAAK;AACL,CAAC;AAGD,IAAa,iBAAiB,GAA9B,MAAA,iBAA+B,SAAQ,iBAAiB,CAAxD;AAAE,IA0CE,WAAJ,CAAgB,OAAmB,EAAE,eAAgC,EAAE,MAAqB,EAC5E,kBAAqC,EACrC,oBAA6C,EACrD,GAAqB,EAH7B;AAAE,QAIM,KAAK,CAAC,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;AACrD,QAJgB,IAAhB,CAAA,kBAAkC,GAAlB,kBAAkB,CAAmB;AAAC,QACtC,IAAhB,CAAA,oBAAoC,GAApB,oBAAoB,CAAyB;AAAC;AACnD;AAEC;AACE;AAAY,QAbG,IAA7B,CAAA,qBAAkD,GAAsB,IAAI,YAAY,EAAO,CAAC;AAChG,QAC2B,IAA3B,CAAA,mBAA8C,GAAsB,IAAI,YAAY,EAAO,CAAC;AAC5F,QAA0B,IAA1B,CAAA,kBAA4C,GAAsB,IAAI,YAAY,EAAO,CAAC;AAC1F,QAAyB,IAAzB,CAAA,iBAA0C,GAAsB,IAAI,YAAY,EAAO,CAAC;AACxF,QAA6B,IAA7B,CAAA,qBAAkD,GAAsB,IAAI,YAAY,EAAO,CAAC;AAChG,QAMQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC;AAC3D,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAChC,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAChC,KAAK;AACL,IA/C0B,IAAI,SAAS,CAAC,KAAa,EAArD;AAAE,QACM,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC;AACnC,KAAK;AACL,IAC0B,IAAI,SAAS,CAAC,KAAa,EAArD;AAAE,QACM,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC;AACnC,KAAK;AACL;AACO;AACmB;AAAQ,IAON,IAAI,aAAa,CAAC,KAAa,EAA3D;AAAE,QACM,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AACnC,KAAK;AACL;AACO;AACkB;AAClB,IACoB,IAAI,YAAY,CAAC,KAAa,EAAzD;AAAE,QACM,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAClC,KAAK;AACL,IAsBI,oBAAoB,CAAC,KAAY,EAArC;AAAE;AAC+C,QACzC,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC;AACnD,QAAQ,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAC9E,QAAQ,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACrD,QAAQ,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3D;AACA,QAAQ,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC;AAC/C,QAAQ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AACvD,QAAQ,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;AACjF;AACA,QAAQ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACtE,KAAK;AACL,IACI,mBAAmB,CAAC,KAAY,EAApC;AAAE,QACM,IAAI,IAAI,CAAC,oBAAoB,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE;AAClG;AACA,YAAY,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAClF,YAAY,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACzD,YAAY,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/D,YAAY,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACzE,SAAS;AACT,KAAK;AACL,IACI,kBAAkB,CAAC,KAAY,EAAnC;AAAE;AACmD,QAC7C,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,KAAK,CAAC;AACpD,QAAQ,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAC3D,QAAQ,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,IAAI,CAAC;AAC/C,QAAQ,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AACrD;AACA,QAAQ,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,KAAK,CAAC;AAChD,QAAQ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9C,QAAQ,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,GAAG,IAAI,CAAC;AAC3D;AACA,QAAQ,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACpE,KAAK;AACL,IACI,oBAAoB,CAAC,KAAY,EAArC;AAAE,QACM,IAAI,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE;AACjD,YAAY,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/D,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,oBAAoB,CAAC,KAAK;AAC/D,iBAAiB,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,YAAY,KAAK,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAAE;AACrH;AACA;AACA,gBAAgB,IAAI,IAAI,GAAO,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;AACtH;AACA,gBAAgB,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;AAC1G,gBAAgB,IAAI,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;AAC3F,oBAAoB,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,WAAW,GAAG,IAAI,CAAC;AACnF,iBAAiB;AACjB;AACA,gBAAgB,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACvE,gBAAgB,IAAI,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE;AACzD,oBAAoB,IAAI,CAAC,kBAAkB,CAAC,WAAW,GAAG,KAAK,CAAC;AAChE,iBAAiB;AACjB,gBAAgB,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC;AACtF,gBAAgB,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC7D,gBAAgB,IAAI,CAAC,aAAa,EAAE,CAAC;AACrC,aAAa;AACb,SAAS;AACT,KAAK;AACL,IACI,eAAe,CAAE,KAAY,EAAjC;AAAE,QACM,IAAI,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE;AACjD;AACA,YAAY,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AAC5E,YAAY,IAAI,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE;AAC7D;AACA,gBAAgB,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACjG,aAAa;AACb;AACA,YAAY,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;AACpD,SAAS;AACT,KAAK;AACL,CAAC;;gnBAAA;AA7H2BD,YAA5B,CAAA;AAAE,IAAG,KAAK,CAAC,eAAe,CAAC;AAAE;AAEJ,CAFzB,EAAA,iBAAA,CAAA,SAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAA0C,CAA1C;AAE0BA,YAA1B,CAAA;AAAE,IAAG,KAAK,CAAC,aAAa,CAAC;AAAE;AACf;AAGM,CAFlB,EAAA,iBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,IAAA,CAAK,CAAL;AAE0BA,YAA1B,CAAA;AAAE,IAAG,KAAK,CAAC,aAAa,CAAC;AAAE;AACf;AAIF,CAHV,EAAA,iBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,IAAA,CAAK,CAAL;AAKaA,YAAb,CAAA;AAAE,IAAG,KAAK,EAAE;AAAE;AAGG,CAHjB,EAAA,iBAAA,CAAA,SAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAA2B,CAA3B;AAK4BA,YAA5B,CAAA;AAAE,IAAG,KAAK,CAAC,eAAe,CAAC;AAAE;AACtB;AAIH,CAHJ,EAAA,iBAAA,CAAA,SAAA,EAAA,eAAA,EAAA,IAAA,CAAK,CAAL;AAK2BA,YAA3B,CAAA;AAAE,IAAG,KAAK,CAAC,cAAc,CAAC;AAAE;AACpB;AAIF,CAHN,EAAA,iBAAA,CAAA,SAAA,EAAA,cAAA,EAAA,IAAA,CAAK,CAAL;AAM6BA,YAA7B,CAAA;AAAE,IAAG,MAAM,CAAC,eAAe,CAAC;AAAE,IAA9BC,YAAA,CAAA,aAAA,EAAoD,YAAY,CAAhE;AAAC,CAAD,EAAA,iBAAA,CAAA,SAAA,EAAA,uBAAA,EAAA,KAAA,CAAA,CAAgG,CAAhG;AAE2BD,YAA3B,CAAA;AAAE,IAAG,MAAM,CAAC,aAAa,CAAC;AAAE,IAA5BC,YAAA,CAAA,aAAA,EAAgD,YAAY,CAA5D;AAAC,CAAD,EAAA,iBAAA,CAAA,SAAA,EAAA,qBAAA,EAAA,KAAA,CAAA,CAA4F,CAA5F;AAC0BD,YAA1B,CAAA;AAAE,IAAG,MAAM,CAAC,YAAY,CAAC;AAAE,IAA3BC,YAAA,CAAA,aAAA,EAA8C,YAAY,CAA1D;AAAC,CAAD,EAAA,iBAAA,CAAA,SAAA,EAAA,oBAAA,EAAA,KAAA,CAAA,CAA0F,CAA1F;AACyBD,YAAzB,CAAA;AAAE,IAAG,MAAM,CAAC,WAAW,CAAC;AAAE,IAA1BC,YAAA,CAAA,aAAA,EAA4C,YAAY,CAAxD;AAAC,CAAD,EAAA,iBAAA,CAAA,SAAA,EAAA,mBAAA,EAAA,KAAA,CAAA,CAAwF,CAAxF;AAC6BD,YAA7B,CAAA;AAAE,IAAG,MAAM,CAAC,eAAe,CAAC;AAAE,IAA9BC,YAAA,CAAA,aAAA,EAAoD,YAAY,CAAhE;AAAC,CAAD,EAAA,iBAAA,CAAA,SAAA,EAAA,uBAAA,EAAA,KAAA,CAAA,CAAgG,CAAhG;AAxCa,iBAAiB,GAA9BD,YAAA,CAAA,MADC,SAAS,CAAC,EAAE,QAAQ,EAAE,gBAAgB,EAAE,CAAC,9CACtC,CA0CJC,YAAA,CAAA,mBAAA,EAAA,CAAyB,UAAU,EAAmB,eAAe,EAAS,cAAc;AAC5F,QAAoC,iBAAiB;AACrD,QAAsC,uBAAuB;AAC7D,QAAY,iBAAiB,CAA7B,CAAA;AAAC,CA7CD,EAAa,iBAAiB,CA+H7B,CA/HD;AAkIA,IAAa,uBAAuB,GAApC,MAAA,uBAAqC,SAAQ,uBAAuB,CAApE;AAAE,IACE,WAAJ,CAAgB,OAAmB,EAAE,eAAgC,EAAE,MAAqB,EAAE,UAA6B,EACnH,GAAqB,EAD7B;AAAE,QAGM,KAAK,CAAC,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;AACjE,KAAK;AACL,CAAC;;sMAAA;AANY,uBAAuB,GAApCD,YAAA,CAAA,MADC,SAAS,CAAC,EAAE,QAAQ,EAAE,uBAAuB,EAAE,CAAC,rDAC7C,CACJC,YAAA,CAAA,mBAAA,EAAA,CAAyB,UAAU,EAAmB,eAAe,EAAS,cAAc,EAAc,iBAAiB;AAC3H,QAAY,iBAAiB,CAA7B,CAAA;AAAC,CAFD,EAAa,uBAAuB,CAMnC,CAND;AAAC;AC9PD;AACA;AACA;AACA;AAGwB;AACqF;AAEhF;AAGR;AAED;AAKb,IAAI,SAAS,GAAG;AACvB,IAAI,cAAc;AAClB,IAAI,EAAE,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,sBAAsB,EAAE;AACpE,IAAI,EAAE,OAAO,EAAE,uBAAuB,EAAE,UAAU,EAAE,8BAA8B,EAAE,IAAI,EAAE,CAAC,cAAc,CAAC,EAAE;AAC5G,CAAC,CAAC;AAOF,IAAa,SAAS,GAAtB,WAAA,GAAA,MAAA,SAAA,CAAA;AAAE,IACA,OAAO,OAAO,GAAhB;AAAE,QACM,OAAO;AACf,YAAY,QAAQ,EAAE,WAAS;AAC/B,YAAY,SAAS,EAAE,SAAS;AAChC,SAAS,CAAC;AACV,KAAK;AACL,CAAC,CAAA;AAPY,SAAS,GAAtB,WAAA,GAAA,UAAA,CAAA,MALC,QAAQ,CAAC,UACR,YAAY,EAAE,CAAC;YAAkB,EAAE,wBAAwB,EAAE,kBAAkB,EAAE;AAAiB,EAAE,iBAAiB,EAAE,uBAAuB,CAAC,UAC/I;EAAO,EAAG,CAAC,kBAAkB,EAAE,wBAAwB,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE;qBAAuB,CAAC;IAE5I,CAAC,EACF,EAAa,SAAS,CAOrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8YAPD;AAAA;AAAiB;AC9BjB;AACA;AACA,oCAAoC;AACpC;ACHA;AACA;AACA,GAAG;AACH;AACA;AAC+U","sourcesContent":["// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\n/**\n * Check and return true if an object is type of string\n */\nexport function isString(obj:any) {\n    return typeof obj === \"string\";\n}\n\n/**\n * Check and return true if an object not undefined or null\n */\nexport function isPresent(obj: any) {\n    return obj !== undefined && obj !== null;\n}\n\n/**\n * Check and return true if an object is type of Function\n */\nexport function isFunction(obj: any) {\n    return typeof obj === \"function\";\n}\n\n/**\n * Create Image element with specified url string\n */\nexport function createImage(src: string) {\n    let img:HTMLImageElement = new HTMLImageElement();\n    img.src = src;\n    return img;\n}\n\n/**\n * Call the function\n */\nexport function callFun(fun: Function) {\n    return fun();\n}","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {isString} from './dnd.utils';\n\nexport class DataTransferEffect {\n\n    static COPY = new DataTransferEffect('copy');\n    static LINK = new DataTransferEffect('link');\n    static MOVE = new DataTransferEffect('move');\n    static NONE = new DataTransferEffect('none');\n\n    constructor(public name: string) { }\n}\n\nexport class DragImage {\n    constructor(\n        public imageElement: any,\n        public x_offset: number = 0,\n        public y_offset: number = 0) {\n            if (isString(this.imageElement)) {\n                // Create real image from string source\n                let imgScr: string = <string>this.imageElement;\n                this.imageElement = new HTMLImageElement();\n                (<HTMLImageElement>this.imageElement).src = imgScr;\n            }\n        }\n}\n\nexport class DragDropConfig {\n    public onDragStartClass: string = \"dnd-drag-start\";\n    public onDragEnterClass: string = \"dnd-drag-enter\";\n    public onDragOverClass: string = \"dnd-drag-over\";\n    public onSortableDragClass: string = \"dnd-sortable-drag\";\n\n    public dragEffect: DataTransferEffect = DataTransferEffect.MOVE;\n    public dropEffect: DataTransferEffect = DataTransferEffect.MOVE;\n    public dragCursor: string = \"move\";\n    public dragImage: DragImage;\n    public defaultCursor: string = \"pointer\";\n}","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {Injectable, EventEmitter} from '@angular/core';\n\nimport {DragDropConfig} from './dnd.config';\nimport {isPresent} from './dnd.utils';\nimport {SortableContainer} from './sortable.component';\n\nexport class DragDropData {\n    dragData: any;\n    mouseEvent: MouseEvent;\n}\n\nexport function dragDropServiceFactory(): DragDropService  {\n    return new DragDropService();\n}\n\n@Injectable()\nexport class DragDropService {\n    allowedDropZones: Array<string> = [];\n    onDragSuccessCallback: EventEmitter<DragDropData>;\n    dragData: any;\n    isDragged: boolean;\n}\n\nexport function dragDropSortableServiceFactory(config: DragDropConfig): DragDropSortableService  {\n    return new DragDropSortableService(config);\n}\n\n@Injectable()\nexport class DragDropSortableService {\n    index: number;\n    sortableContainer: SortableContainer;\n    isDragged: boolean;\n\n    private _elem: HTMLElement;\n    public get elem(): HTMLElement {\n        return this._elem;\n    }\n\n    constructor(private _config:DragDropConfig) {}\n\n    markSortable(elem: HTMLElement) {\n        if (isPresent(this._elem)) {\n            this._elem.classList.remove(this._config.onSortableDragClass);\n        }\n        if (isPresent(elem)) {\n            this._elem = elem;\n            this._elem.classList.add(this._config.onSortableDragClass);\n        }\n    }\n}\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {Injectable, ChangeDetectorRef, ViewRef} from '@angular/core';\nimport {ElementRef} from '@angular/core';\n\nimport { DragDropConfig, DragImage } from './dnd.config';\nimport { DragDropService } from './dnd.service';\nimport { isString, isFunction, isPresent, createImage, callFun } from './dnd.utils';\n\n@Injectable()\nexport abstract class AbstractComponent {\n    _elem: HTMLElement;\n    _dragHandle: HTMLElement;\n    _dragHelper: HTMLElement;\n    _defaultCursor: string;\n\n    /**\n     * Last element that was mousedown'ed\n     */\n    _target: EventTarget;\n\n    /**\n     * Whether the object is draggable. Default is true.\n     */\n    private _dragEnabled: boolean = false;\n    set dragEnabled(enabled: boolean) {\n        this._dragEnabled = !!enabled;\n        this._elem.draggable = this._dragEnabled;\n    }\n    get dragEnabled(): boolean {\n        return this._dragEnabled;\n    }\n\n    /**\n     * Allows drop on this element\n     */\n    dropEnabled: boolean = false;\n    /**\n     * Drag effect\n     */\n    effectAllowed: string;\n    /**\n     * Drag cursor\n     */\n    effectCursor: string;\n\n    /**\n     * Restrict places where a draggable element can be dropped. Either one of\n     * these two mechanisms can be used:\n     *\n     * - dropZones: an array of strings that permits to specify the drop zones\n     *   associated with this component. By default, if the drop-zones attribute\n     *   is not specified, the droppable component accepts drop operations by\n     *   all the draggable components that do not specify the allowed-drop-zones\n     *\n     * - allowDrop: a boolean function for droppable components, that is checked\n     *   when an item is dragged. The function is passed the dragData of this\n     *   item.\n     *   - if it returns true, the item can be dropped in this component\n     *   - if it returns false, the item cannot be dropped here\n     */\n    allowDrop: (dropData: any) => boolean;\n    dropZones: string[] = [];\n\n    /**\n     * Here is the property dragImage you can use:\n     * - The string value as url to the image\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"/images/simpler.png\">\n     * ...\n     * - The DragImage value with Image and optional offset by x and y:\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\n     * ...\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"myDragImage\">\n     * ...\n     * - The custom function to return the value of dragImage programmatically:\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"getDragImage(someData)\">\n     * ...\n     *   getDragImage(value:any): string {\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\n     *   }\n     */\n    dragImage: string | DragImage | Function;\n\n    cloneItem: boolean = false;\n\n    constructor(elemRef: ElementRef, public _dragDropService: DragDropService, public _config: DragDropConfig,\n        private _cdr: ChangeDetectorRef) {\n\n        // Assign default cursor unless overridden\n        this._defaultCursor = _config.defaultCursor;\n        this._elem = elemRef.nativeElement;\n        this._elem.style.cursor = this._defaultCursor;  // set default cursor on our element\n        //\n        // DROP events\n        //\n        this._elem.ondragenter = (event: Event) => {\n            this._onDragEnter(event);\n        };\n        this._elem.ondragover = (event: DragEvent) => {\n            this._onDragOver(event);\n            //\n            if (event.dataTransfer != null) {\n                event.dataTransfer.dropEffect = this._config.dropEffect.name;\n            }\n\n            return false;\n        };\n        this._elem.ondragleave = (event: Event) => {\n            this._onDragLeave(event);\n        };\n        this._elem.ondrop = (event: Event) => {\n            this._onDrop(event);\n        };\n        //\n        // Drag events\n        //\n        this._elem.onmousedown = (event: MouseEvent) => {\n            this._target = event.target;\n        };\n        this._elem.ondragstart = (event: DragEvent) => {\n            if (this._dragHandle) {\n                if (!this._dragHandle.contains(<Element>this._target)) {\n                    event.preventDefault();\n                    return;\n                }\n            }\n\n            this._onDragStart(event);\n            //\n            if (event.dataTransfer != null) {\n                event.dataTransfer.setData('text', '');\n                // Change drag effect\n                event.dataTransfer.effectAllowed = this.effectAllowed || this._config.dragEffect.name;\n                // Change drag image\n                if (isPresent(this.dragImage)) {\n                    if (isString(this.dragImage)) {\n                        (<any>event.dataTransfer).setDragImage(createImage(<string>this.dragImage));\n                    } else if (isFunction(this.dragImage)) {\n                        (<any>event.dataTransfer).setDragImage(callFun(<Function>this.dragImage));\n                    } else {\n                        let img: DragImage = <DragImage>this.dragImage;\n                        (<any>event.dataTransfer).setDragImage(img.imageElement, img.x_offset, img.y_offset);\n                    }\n                } else if (isPresent(this._config.dragImage)) {\n                    let dragImage: DragImage = this._config.dragImage;\n                    (<any>event.dataTransfer).setDragImage(dragImage.imageElement, dragImage.x_offset, dragImage.y_offset);\n                } else if (this.cloneItem) {\n                    this._dragHelper = <HTMLElement>this._elem.cloneNode(true);\n                    this._dragHelper.classList.add('dnd-drag-item');\n                    this._dragHelper.style.position = \"absolute\";\n                    this._dragHelper.style.top = \"0px\";\n                    this._dragHelper.style.left = \"-1000px\";\n                    this._elem.parentElement.appendChild(this._dragHelper);\n                    (<any>event.dataTransfer).setDragImage(this._dragHelper, event.offsetX, event.offsetY);\n                }\n\n                // Change drag cursor\n                let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\n\n                if (this._dragEnabled) {\n                    cursorelem.style.cursor = this.effectCursor ? this.effectCursor : this._config.dragCursor;\n                } else {\n                    cursorelem.style.cursor = this._defaultCursor;\n                }\n            }\n        };\n\n        this._elem.ondragend = (event: Event) => {\n            if (this._elem.parentElement && this._dragHelper) {\n                this._elem.parentElement.removeChild(this._dragHelper);\n            }\n            // console.log('ondragend', event.target);\n            this._onDragEnd(event);\n            // Restore style of dragged element\n            let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\n            cursorelem.style.cursor = this._defaultCursor;\n        };\n    }\n\n    public setDragHandle(elem: HTMLElement) {\n        this._dragHandle = elem;\n    }\n    /******* Change detection ******/\n\n    detectChanges () {\n        // Programmatically run change detection to fix issue in Safari\n        setTimeout(() => {\n            if ( this._cdr && !(this._cdr as ViewRef).destroyed ) {\n                this._cdr.detectChanges();\n            }\n        }, 250);\n    }\n\n    //****** Droppable *******//\n    private _onDragEnter(event: Event): void {\n        // console.log('ondragenter._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // event.preventDefault();\n            this._onDragEnterCallback(event);\n        }\n    }\n\n    private _onDragOver(event: Event) {\n        // // console.log('ondragover._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // The element is over the same source element - do nothing\n            if (event.preventDefault) {\n                // Necessary. Allows us to drop.\n                event.preventDefault();\n            }\n\n            this._onDragOverCallback(event);\n        }\n    }\n\n    private _onDragLeave(event: Event): void {\n        // console.log('ondragleave._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // event.preventDefault();\n            this._onDragLeaveCallback(event);\n        }\n    }\n\n    private _onDrop(event: Event): void {\n        // console.log('ondrop._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // Necessary. Allows us to drop.\n            this._preventAndStop(event);\n\n            this._onDropCallback(event);\n\n            this.detectChanges();\n        }\n    }\n\n    private _isDropAllowed(event: any): boolean {\n        if ((this._dragDropService.isDragged || (event.dataTransfer && event.dataTransfer.files)) && this.dropEnabled) {\n            // First, if `allowDrop` is set, call it to determine whether the\n            // dragged element can be dropped here.\n            if (this.allowDrop) {\n                return this.allowDrop(this._dragDropService.dragData);\n            }\n\n            // Otherwise, use dropZones if they are set.\n            if (this.dropZones.length === 0 && this._dragDropService.allowedDropZones.length === 0) {\n                return true;\n            }\n            for (let i: number = 0; i < this._dragDropService.allowedDropZones.length; i++) {\n                let dragZone: string = this._dragDropService.allowedDropZones[i];\n                if (this.dropZones.indexOf(dragZone) !== -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    private _preventAndStop(event: Event): any {\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n    }\n\n    //*********** Draggable **********//\n\n    private _onDragStart(event: Event): void {\n        //console.log('ondragstart.dragEnabled', this._dragEnabled);\n        if (this._dragEnabled) {\n            this._dragDropService.allowedDropZones = this.dropZones;\n            // console.log('ondragstart.allowedDropZones', this._dragDropService.allowedDropZones);\n            this._onDragStartCallback(event);\n        }\n    }\n\n    private _onDragEnd(event: Event): void {\n        this._dragDropService.allowedDropZones = [];\n        // console.log('ondragend.allowedDropZones', this._dragDropService.allowedDropZones);\n        this._onDragEndCallback(event);\n    }\n\n    //**** Drop Callbacks ****//\n    _onDragEnterCallback(event: Event) { }\n    _onDragOverCallback(event: Event) { }\n    _onDragLeaveCallback(event: Event) { }\n    _onDropCallback(event: Event) { }\n\n    //**** Drag Callbacks ****//\n    _onDragStartCallback(event: Event) { }\n    _onDragEndCallback(event: Event) { }\n}\n\nexport class AbstractHandleComponent {\n    _elem: HTMLElement;\n    constructor(elemRef: ElementRef, public _dragDropService: DragDropService, public _config: DragDropConfig,\n        private _Component: AbstractComponent, private _cdr: ChangeDetectorRef) {\n        this._elem = elemRef.nativeElement;\n        this._Component.setDragHandle(this._elem);\n    }\n}\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\n\nimport {AbstractComponent, AbstractHandleComponent} from './abstract.component';\nimport {DragDropConfig, DragImage} from './dnd.config';\nimport {DragDropService, DragDropData} from './dnd.service';\n\n@Directive({ selector: '[dnd-draggable]' })\nexport class DraggableComponent extends AbstractComponent {\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    /**\n     * Callback function called when the drag actions happened.\n     */\n    @Output() onDragStart: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragEnd: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n\n    /**\n     * The data that has to be dragged. It can be any JS object\n     */\n    @Input() dragData: any;\n\n    /**\n     * Callback function called when the drag action ends with a valid drop action.\n     * It is activated after the on-drop-success callback\n     */\n    @Output(\"onDragSuccess\") onDragSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    /**\n     * Here is the property dragImage you can use:\n     * - The string value as url to the image\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"/images/simpler.png\">\n     * ...\n     * - The DragImage value with Image and offset by x and y:\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\n     * ...\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"myDragImage\">\n     * ...\n     * - The custom function to return the value of dragImage programmatically:\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"getDragImage(someData)\">\n     * ...\n     *   getDragImage(value:any): string {\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\n     *   }\n     */\n    @Input() dragImage: string | DragImage | Function;\n\n    \n    @Input() cloneItem: boolean;\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, cdr);\n        this._defaultCursor = this._elem.style.cursor;\n        this.dragEnabled = true;\n    }\n\n    _onDragStartCallback(event: MouseEvent) {\n        this._dragDropService.isDragged = true;\n        this._dragDropService.dragData = this.dragData;\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n        this._elem.classList.add(this._config.onDragStartClass);\n        //\n        this.onDragStart.emit({dragData: this.dragData, mouseEvent: event});\n    }\n\n    _onDragEndCallback(event: MouseEvent) {\n        this._dragDropService.isDragged = false;\n        this._dragDropService.dragData = null;\n        this._dragDropService.onDragSuccessCallback = null;\n        this._elem.classList.remove(this._config.onDragStartClass);\n        //\n        this.onDragEnd.emit({dragData: this.dragData, mouseEvent: event});\n    }\n}\n\n\n@Directive({ selector: '[dnd-draggable-handle]' })\nexport class DraggableHandleComponent extends AbstractHandleComponent {\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, _Component: DraggableComponent,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, _Component, cdr);\n    }\n}\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\n\nimport {AbstractComponent} from './abstract.component';\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropData} from './dnd.service';\n\n@Directive({ selector: '[dnd-droppable]' })\nexport class DroppableComponent extends AbstractComponent {\n\n    @Input(\"dropEnabled\") set droppable(value:boolean) {\n        this.dropEnabled = !!value;\n    }\n\n    /**\n     * Callback function called when the drop action completes correctly.\n     * It is activated before the on-drag-success callback.\n     */\n    @Output() onDropSuccess: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragEnter: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragOver: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragLeave: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n\n    @Input(\"allowDrop\") set allowdrop(value: (dropData: any) => boolean) {\n        this.allowDrop = value;\n    }\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, cdr);\n\n        this.dropEnabled = true;\n    }\n\n    _onDragEnterCallback(event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.add(this._config.onDragEnterClass);\n            this.onDragEnter.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    }\n\n    _onDragOverCallback (event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.add(this._config.onDragOverClass);\n            this.onDragOver.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    };\n\n    _onDragLeaveCallback (event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.remove(this._config.onDragOverClass);\n            this._elem.classList.remove(this._config.onDragEnterClass);\n            this.onDragLeave.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    };\n\n    _onDropCallback (event: MouseEvent) {\n        let dataTransfer = (event as any).dataTransfer;\n        if (this._dragDropService.isDragged || (dataTransfer && dataTransfer.files)) {\n            this.onDropSuccess.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n            if (this._dragDropService.onDragSuccessCallback) {\n                this._dragDropService.onDragSuccessCallback.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n            }\n            this._elem.classList.remove(this._config.onDragOverClass);\n            this._elem.classList.remove(this._config.onDragEnterClass);\n        }\n    }\n}\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\nimport {FormArray} from '@angular/forms';\n\nimport {AbstractComponent, AbstractHandleComponent} from './abstract.component';\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropSortableService} from './dnd.service';\n\n@Directive({ selector: '[dnd-sortable-container]' })\nexport class SortableContainer extends AbstractComponent {\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    private _sortableData: Array<any>|FormArray = [];\n    private sortableHandler: SortableFormArrayHandler|SortableArrayHandler;\n\n    @Input() set sortableData(sortableData: Array<any>|FormArray) {\n        this._sortableData = sortableData;\n        if (sortableData instanceof FormArray) {\n            this.sortableHandler = new SortableFormArrayHandler();\n        } else {\n            this.sortableHandler = new SortableArrayHandler();\n        }\n        //\n        this.dropEnabled = !!this._sortableData;\n        // console.log(\"collection is changed, drop enabled: \" + this.dropEnabled);\n    }\n    get sortableData(): Array<any>|FormArray {\n        return this._sortableData;\n    }\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, cdr:ChangeDetectorRef,\n        private _sortableDataService: DragDropSortableService) {\n\n        super(elemRef, dragDropService, config, cdr);\n        this.dragEnabled = false;\n    }\n\n    _onDragEnterCallback(event: Event) {\n        if (this._sortableDataService.isDragged) {\n            let item:any = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n            // Check does element exist in sortableData of this Container\n            if (this.indexOf(item) === -1) {\n                // Let's add it\n                // console.log('Container._onDragEnterCallback. drag node [' + this._sortableDataService.index.toString() + '] over parent node');\n                // Remove item from previouse list\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n                if (this._sortableDataService.sortableContainer._sortableData.length === 0) {\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\n                }\n                // Add item to new list\n                this.insertItemAt(item, 0);\n                this._sortableDataService.sortableContainer = this;\n                this._sortableDataService.index = 0;\n            }\n            // Refresh changes in properties of container component\n            this.detectChanges();\n        }\n    }\n\n    getItemAt(index: number): any {\n        return this.sortableHandler.getItemAt(this._sortableData, index);\n    }\n\n    indexOf(item: any): number {\n        return this.sortableHandler.indexOf(this._sortableData, item);\n    }\n\n    removeItemAt(index: number): void {\n        this.sortableHandler.removeItemAt(this._sortableData, index);\n    }\n\n    insertItemAt(item: any, index: number) {\n        this.sortableHandler.insertItemAt(this._sortableData, item, index);\n    }\n}\n\nclass SortableArrayHandler {\n    getItemAt(sortableData: any, index: number): any {\n        return sortableData[index];\n    }\n\n    indexOf(sortableData: any, item: any): number {\n        return sortableData.indexOf(item);\n    }\n\n    removeItemAt(sortableData: any, index: number) {\n        sortableData.splice(index, 1);\n    }\n\n    insertItemAt(sortableData: any, item: any, index: number) {\n        sortableData.splice(index, 0, item);\n    }\n}\n\nclass SortableFormArrayHandler {\n    getItemAt(sortableData: any, index: number): any {\n        return sortableData.at(index);\n    }\n\n    indexOf(sortableData: any, item: any): number {\n        return sortableData.controls.indexOf(item);\n    }\n\n    removeItemAt(sortableData: any, index: number) {\n        sortableData.removeAt(index);\n    }\n\n    insertItemAt(sortableData: any, item: any, index: number) {\n        sortableData.insert(index, item);\n    }\n}\n\n@Directive({ selector: '[dnd-sortable]' })\nexport class SortableComponent extends AbstractComponent {\n\n    @Input('sortableIndex') index: number;\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    @Input(\"dropEnabled\") set droppable(value:boolean) {\n        this.dropEnabled = !!value;\n    }\n\n    /**\n     * The data that has to be dragged. It can be any JS object\n     */\n    @Input() dragData: any;\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    /**\n     * Callback function called when the drag action ends with a valid drop action.\n     * It is activated after the on-drop-success callback\n     */\n    @Output(\"onDragSuccess\") onDragSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output(\"onDragStart\") onDragStartCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDragOver\") onDragOverCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDragEnd\") onDragEndCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDropSuccess\") onDropSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        private _sortableContainer: SortableContainer,\n        private _sortableDataService: DragDropSortableService,\n        cdr:ChangeDetectorRef) {\n        super(elemRef, dragDropService, config, cdr);\n        this.dropZones = this._sortableContainer.dropZones;\n        this.dragEnabled = true;\n        this.dropEnabled = true;\n    }\n\n    _onDragStartCallback(event: Event) {\n        // console.log('_onDragStartCallback. dragging elem with index ' + this.index);\n        this._sortableDataService.isDragged = true;\n        this._sortableDataService.sortableContainer = this._sortableContainer;\n        this._sortableDataService.index = this.index;\n        this._sortableDataService.markSortable(this._elem);\n        // Add dragData\n        this._dragDropService.isDragged = true;\n        this._dragDropService.dragData = this.dragData;\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n        //\n        this.onDragStartCallback.emit(this._dragDropService.dragData);\n    }\n\n    _onDragOverCallback(event: Event) {\n        if (this._sortableDataService.isDragged && this._elem !== this._sortableDataService.elem) {\n            // console.log('_onDragOverCallback. dragging elem with index ' + this.index);\n            this._sortableDataService.sortableContainer = this._sortableContainer;\n            this._sortableDataService.index = this.index;\n            this._sortableDataService.markSortable(this._elem);\n            this.onDragOverCallback.emit(this._dragDropService.dragData);\n        }\n    }\n\n    _onDragEndCallback(event: Event) {\n        // console.log('_onDragEndCallback. end dragging elem with index ' + this.index);\n        this._sortableDataService.isDragged = false;\n        this._sortableDataService.sortableContainer = null;\n        this._sortableDataService.index = null;\n        this._sortableDataService.markSortable(null);\n        // Add dragGata\n        this._dragDropService.isDragged = false;\n        this._dragDropService.dragData = null;\n        this._dragDropService.onDragSuccessCallback = null;\n        //\n        this.onDragEndCallback.emit(this._dragDropService.dragData);\n    }\n\n    _onDragEnterCallback(event: Event) {\n        if (this._sortableDataService.isDragged) {\n            this._sortableDataService.markSortable(this._elem);\n            if ((this.index !== this._sortableDataService.index) ||\n                (this._sortableDataService.sortableContainer.sortableData !== this._sortableContainer.sortableData)) {\n                // console.log('Component._onDragEnterCallback. drag node [' + this.index + '] over node [' + this._sortableDataService.index + ']');\n                // Get item\n                let item:any = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n                // Remove item from previouse list\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n                if (this._sortableDataService.sortableContainer.sortableData.length === 0) {\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\n                }\n                // Add item to new list\n                this._sortableContainer.insertItemAt(item, this.index);\n                if (this._sortableContainer.dropEnabled) {\n                    this._sortableContainer.dropEnabled = false;\n                }\n                this._sortableDataService.sortableContainer = this._sortableContainer;\n                this._sortableDataService.index = this.index;\n                this.detectChanges();\n            }\n        }\n    }\n\n    _onDropCallback (event: Event) {\n        if (this._sortableDataService.isDragged) {\n            // console.log('onDropCallback.onDropSuccessCallback.dragData', this._dragDropService.dragData);\n            this.onDropSuccessCallback.emit(this._dragDropService.dragData);\n            if (this._dragDropService.onDragSuccessCallback) {\n                // console.log('onDropCallback.onDragSuccessCallback.dragData', this._dragDropService.dragData);\n                this._dragDropService.onDragSuccessCallback.emit(this._dragDropService.dragData);\n            }\n            // Refresh changes in properties of container component\n            this._sortableContainer.detectChanges();\n        }\n    }\n}\n\n@Directive({ selector: '[dnd-sortable-handle]' })\nexport class SortableHandleComponent extends AbstractHandleComponent {\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, _Component: SortableComponent,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, _Component, cdr);\n    }\n}\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport { NgModule, ModuleWithProviders } from \"@angular/core\";\n\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropSortableService, dragDropServiceFactory, dragDropSortableServiceFactory} from './dnd.service';\nimport {DraggableComponent, DraggableHandleComponent} from './draggable.component';\nimport {DroppableComponent} from './droppable.component';\nimport {SortableContainer, SortableComponent, SortableHandleComponent} from './sortable.component';\n\nexport * from './abstract.component';\nexport * from './dnd.config';\nexport * from './dnd.service';\nexport * from './draggable.component';\nexport * from './droppable.component';\nexport * from './sortable.component';\n\nexport let providers = [\n    DragDropConfig,\n    { provide: DragDropService, useFactory: dragDropServiceFactory },\n    { provide: DragDropSortableService, useFactory: dragDropSortableServiceFactory, deps: [DragDropConfig] }\n];\n\n@NgModule({\n  declarations: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n  exports : [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n\n})\nexport class DndModule {\n  static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: DndModule,\n            providers: providers\n        };\n    }\n}\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nexport * from './src/dnd.module';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}